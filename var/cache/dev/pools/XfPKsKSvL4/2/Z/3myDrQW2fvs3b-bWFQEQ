<?php //%255BApp%255CEntity%255CUser%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['Doctrine\\ORM\\Mapping\\InheritanceType'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\InheritanceType')),
        clone ($p['Doctrine\\ORM\\Mapping\\DiscriminatorColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\DiscriminatorColumn')),
        clone ($p['Doctrine\\ORM\\Mapping\\DiscriminatorMap'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\DiscriminatorMap')),
        clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
    ],
    null,
    [
        'stdClass' => [
            'repositoryClass' => [
                'App\\Repository\\UserRepository',
            ],
            'value' => [
                1 => 'SINGLE_TABLE',
                3 => [
                    'user' => 'User',
                    'apprenant' => 'Apprenant',
                    'formateur' => 'Formateur',
                    'cm' => 'CM',
                ],
            ],
            'name' => [
                2 => 'type',
            ],
            'type' => [
                2 => 'string',
            ],
            'collectionOperations' => [
                4 => [
                    'get_users' => [
                        'method' => 'get',
                        'deserialize' => false,
                    ],
                    'get_users_deleted' => [
                        'method' => 'get',
                        'deserialize' => false,
                    ],
                    'post_user' => [
                        'method' => 'post',
                        'deserialize' => false,
                    ],
                ],
            ],
            'itemOperations' => [
                4 => [
                    'get' => [
                        'path' => '/users/{id}',
                    ],
                    'update_user' => [
                        'method' => 'put',
                        'path' => '/users/{id}',
                        'deserialize' => false,
                    ],
                    'delete_user' => [
                        'method' => 'delete',
                        'deserialize' => false,
                    ],
                    'desarchive_user' => [
                        'method' => 'delete',
                        'deserialize' => false,
                    ],
                ],
            ],
            'attributes' => [
                4 => [
                    'security' => 'is_granted(\'ROLE_ADMIN\')',
                    'security_message' => 'AccÃ¨s refusÃ©!',
                    'route_prefix' => '/admin',
                    'normalization_context' => [
                        'groups' => [
                            'user:read',
                        ],
                    ],
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
        $o[4],
    ],
    []
); }];
