<?php //resource_metadata_2f471ff75907e592c0425f5bda4ce32e

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['ApiPlatform\\Core\\Metadata\\Resource\\ResourceMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Metadata\\Resource\\ResourceMetadata')),
    ],
    null,
    [
        'ApiPlatform\\Core\\Metadata\\Resource\\ResourceMetadata' => [
            'shortName' => [
                'Competence',
            ],
            'description' => [
                '',
            ],
            'itemOperations' => [
                [
                    'get' => [
                        'path' => '/competences/{id}',
                        'input' => null,
                        'output' => null,
                        'method' => 'GET',
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                    'put' => [
                        'path' => '/competences/{id}',
                        'deserialize' => false,
                        'input' => null,
                        'output' => null,
                        'method' => 'PUT',
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                    'delete' => [
                        'path' => '/competences/{id}',
                        'input' => null,
                        'output' => null,
                        'method' => 'DELETE',
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                ],
            ],
            'collectionOperations' => [
                [
                    'get' => [
                        'path' => '/competences',
                        'input' => null,
                        'output' => null,
                        'method' => 'GET',
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                    'addcompetences' => [
                        'method' => 'POST',
                        'path' => '/competences',
                        'deserialize' => false,
                        'input' => null,
                        'output' => null,
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                ],
            ],
            'graphql' => [
                [
                    'item_query' => [],
                    'collection_query' => [],
                    'delete' => [],
                    'update' => [],
                    'create' => [],
                ],
            ],
            'attributes' => [
                [
                    'route_prefix' => '/admin',
                    'normalization_context' => [
                        'groups' => [
                            'competence:read',
                        ],
                    ],
                    'input' => null,
                    'output' => null,
                ],
            ],
        ],
    ],
    $o[0],
    []
); }];
